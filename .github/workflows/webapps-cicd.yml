name: CI/CD for webapps

on:
  push:
    branches:
      - main
    paths:
      - "webapps/**"
  pull_request:
    branches:
      - main
    paths:
      - "webapps/**"
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_webapps: ${{ steps.set-outputs.outputs.changed_webapps || '[]' }}
    steps:
      - uses: actions/checkout@v3

      - name: Fetch changed webapps
        id: changed-webapps
        uses: tj-actions/changed-files@v44
        with:
          files: |
            webapps/template/**
            webapps/fullstackproject/**
            webapps/main/**
            webapps/portfolio/**
            webapps/statify/**

      - name: Track changed webapps in json array
        id: set-outputs
        run: |
          changed=()

          # change detection
          if [[ -n "$(git diff --name-only HEAD^ HEAD -- webapps/fullstackproject/)" ]]; then
            changed+=("fullstackproject")
          fi

          if [[ -n "$(git diff --name-only HEAD^ HEAD -- webapps/main/)" ]]; then
            changed+=("main")
          fi

          if [[ -n "$(git diff --name-only HEAD^ HEAD -- webapps/template/)" ]]; then
            changed+=("template")
          fi

          if [[ -n "$(git diff --name-only HEAD^ HEAD -- webapps/portfolio/)" ]]; then
            changed+=("portfolio")
          fi

          if [[ -n "$(git diff --name-only HEAD^ HEAD -- webapps/statify/)" ]]; then
            changed+=("statify")
          fi

          # convert to JSON
          json_changed=$(jq -nc '$ARGS.positional' --args "${changed[@]}")
          echo "changed_webapps=$json_changed" >> $GITHUB_OUTPUT

  build-and-deploy:
    needs: detect-changes
    if: ${{ fromJson(needs.detect-changes.outputs.changed_webapps) != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        webapp: ${{ fromJson(needs.detect-changes.outputs.changed_webapps) }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PI_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          echo "Host pi-deploy
            HostName ${{ secrets.PI_HOST }}
            User ${{ secrets.PI_USER }}
            Port ${{ secrets.PI_SSH_PORT }}
            IdentityFile ~/.ssh/id_ed25519
            StrictHostKeyChecking no
            UserKnownHostsFile=/dev/null" > ~/.ssh/config

      - name: Make deploy script executable
        run: chmod +x webapps/${{ matrix.webapp }}/deploy.sh

      - name: Run deploy script (build, save, upload, load, start)
        run: |
          webapps/${{ matrix.webapp }}/deploy.sh ${{ secrets.PI_USER }} ${{ secrets.PI_SSH_PORT }} ${{ secrets.PI_HOST }}
